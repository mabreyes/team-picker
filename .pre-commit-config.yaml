# Pre-commit hooks configuration for Team Picker project
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
    # General file checks
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.5.0
      hooks:
          - id: trailing-whitespace
            description: Trim trailing whitespace
          - id: end-of-file-fixer
            description: Ensure files end with a newline
          - id: check-yaml
            description: Check YAML files for syntax errors
          - id: check-json
            description: Check JSON files for syntax errors
          - id: check-toml
            description: Check TOML files for syntax errors
          - id: check-merge-conflict
            description: Check for merge conflict markers
          - id: check-added-large-files
            description: Prevent large files from being committed
            args: ['--maxkb=1000']
          - id: check-case-conflict
            description: Check for case conflicts in filenames
          - id: mixed-line-ending
            description: Check for mixed line endings
            args: ['--fix=lf']

    # Python code formatting and linting
    - repo: https://github.com/psf/black
      rev: 23.12.1
      hooks:
          - id: black
            description: Format Python code with Black
            language_version: python3
            args: ['--line-length=88']

    - repo: https://github.com/pycqa/isort
      rev: 5.13.2
      hooks:
          - id: isort
            description: Sort Python imports
            args: ['--profile=black', '--line-length=88']

    - repo: https://github.com/pycqa/flake8
      rev: 7.0.0
      hooks:
          - id: flake8
            description: Lint Python code with flake8
            args: ['--max-line-length=88', '--extend-ignore=E203,W503']

    - repo: https://github.com/pycqa/bandit
      rev: 1.7.5
      hooks:
          - id: bandit
            description: Security linting for Python
            args: ['-r', '-f', 'json', '-o', 'bandit-report.json']
            exclude: ^tests/

    # JavaScript and CSS formatting
    - repo: https://github.com/pre-commit/mirrors-prettier
      rev: v3.1.0
      hooks:
          - id: prettier
            description: Format JavaScript, CSS, HTML, and other files
            types_or: [javascript, css, html, json, yaml, markdown]
            args: ['--write', '--tab-width=4', '--single-quote']

    # Python type checking
    - repo: https://github.com/pre-commit/mirrors-mypy
      rev: v1.8.0
      hooks:
          - id: mypy
            description: Static type checking for Python
            additional_dependencies: [types-requests]
            args: ['--ignore-missing-imports', '--no-strict-optional']

    # Git commit message formatting
    - repo: https://github.com/commitizen-tools/commitizen
      rev: v3.13.0
      hooks:
          - id: commitizen
            description: Check commit message format
            stages: [commit-msg]

    # Additional Python checks
    - repo: https://github.com/pycqa/pydocstyle
      rev: 6.3.0
      hooks:
          - id: pydocstyle
            description: Check Python docstring style
            args: ['--convention=google']
            exclude: ^(tests/|migrations/)

    # Check for secrets
    - repo: https://github.com/Yelp/detect-secrets
      rev: v1.4.0
      hooks:
          - id: detect-secrets
            description: Detect secrets in code
            args: ['--baseline', '.secrets.baseline']
            exclude: package.lock.json

# Configuration for specific hooks
default_language_version:
    python: python3

# Exclude certain files/directories
exclude: |
    (?x)^(
      \.git/|
      \.venv/|
      venv/|
      __pycache__/|
      \.pytest_cache/|
      node_modules/|
      output/|
      uploads/|
      .*\.pyc|
      .*\.pyo
    )$
